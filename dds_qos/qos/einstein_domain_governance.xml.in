<?xml version="1.0"?>

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="@CONNEXTDDS_RESOURCE_QOS_PROFILES_SCHEMA_DIR@/dds_security_governance.xsd"
     version="@CONNEXTDDS_FOUND_VERSION@">

    <!-- Attributes whose names end with _protection_kind share a type called ProtectionKind. The DDS Security
    specification lists five possible values of ProtectionKind, all of which are supported by Security Plugins.
        - NONE: Indicates that no cryptographic transformation is applied
        - SIGN: Indicates that the cryptographic transformation is purely a Galois message authentication code (GMAC).
            No encryption is performed. The GMAC is placed after the content. If the receiver finds a missing or
            incorrect GMAC, the receiver will reject the content.
        - ENCRYPT: Indicates that the cryptographic transformation is an AES encryption followed by a GMAC computed on
            the ciphertext, also known as Galois/Counter Mode (GCM). The GMAC is placed after the content. If the
            receiver finds a missing or incorrect GMAC, the receiver will reject the content.
        - WITH_ORIGIN_AUTHENTICATION protection kinds: Indicates that in addition to using the sender’s key to generate
            a common GMAC, the sender generates receiver-specific GMACs using keys that are specific to individual
            sender-receiver pairs. The additional GMACs are placed after the common GMAC. They prove to the receiver
            that the sender originated the message, preventing other receivers from impersonating the sender. If the
            receiver finds a missing or incorrect common GMAC, the receiver will reject the content. If the receiver
            finds a missing or incorrect receiver-specific GMAC that was computed using its own receiver-specific key,
            the receiver will reject the content. WITH_ORIGIN_AUTHENTICATION protection kinds are allowed only if the
            value of the property cryptography.max_receiver_specific_macs is greater than 1.
            - SIGN_WITH_ORIGIN_AUTHENTICATION: Indicates that a common GMAC is performed on the content, and
                receiver-specific GMACs are performed on the common GMAC.
            - ENCRYPT_WITH_ORIGIN_AUTHENTICATION: indicates that a GCM is performed on the content, and
                receiver-specific GMACs are performed on the GMAC of the GCM. -->

    <domain_access_rules>
        <!-- Domain rule for all domains -->
        <domain_rule>
            <!-- Defines the domain ids to which the domain rule applies. -->
            <domains>
                <!-- id tags are used to specify individual domain ids to which the domain rule applies -->
                <!-- id_range tags used to specify a range of domain ids to which the domain rule applies. min and max
                tags are used to specify the range limits. The min and max tags are inclusive. If only a min tag is
                specified, all domains greater than or equal to the min id are included in the range. If only a max tag
                is specified, all the domains from 0 to max, inclusive, are included in the range. -->
                <id_range>
                    <min>10</min>
                    <max>26</max>
                </id_range>
            </domains>

            <!-- Controls whether or not a remote DomainParticipant that doesn't support security or fails the
            authentication handshake is allowed to proceed in trying to communicate with a local DomainParticipant. -->
            <allow_unauthenticated_participants>false</allow_unauthenticated_participants>

            <!-- Controls whether or not remote DomainParticipant permissions are checked when a remote
            DomainParticipant is discovered. -->
            <enable_join_access_control>true</enable_join_access_control>

            <!-- Specifies the metadata_protection_kind used for the secure builtin DataWriter and DataReader entities
            used for discovery, Topic Queries, and Locator Reachability Responses. -->
            <discovery_protection_kind>NONE</discovery_protection_kind>

            <!-- Specifies the metadata_protection_kind used for the secure builtin DataWriter and DataReader entities
            used for liveliness -->
            <liveliness_protection_kind>NONE</liveliness_protection_kind>

            <!-- Specifies how to protect a DomainParticipant’s outgoing messages and what kind of protection is
            required of incoming messages. A message consists of an RTPS header and submessages, so a message is an
            envelope around submessages. If allow_unauthenticated_participants is set to TRUE, rtps_protection_kind must
            be set to NONE. Setting rtps_protection_kind to NONE will cause the DomainParticipant to accept both
            protected and unprotected incoming RTPS messages. Setting rtps_protection_kind to something other than NONE
            will cause the DomainParticipant to reject incoming RTPS messages that have a missing or incorrect GMAC or
            GCM. -->
            <rtps_protection_kind>SIGN</rtps_protection_kind>

            <topic_access_rules>
                <topic_rule>
                    <!-- Topics to which the topic rule applies (* matches all topics) -->
                    <topic_expression>*</topic_expression>

                    <!-- Specifies whether to use the secure or non-secure builtin endpoints for certain outgoing
                    traffic related to this topic. Such traffic includes endpoint discovery messages and TopicQuery
                    messages. enable_discovery_protection also specifies whether or not to reject non-secure incoming
                    endpoint discovery messages related to this topic. -->
                    <enable_discovery_protection>false</enable_discovery_protection>

                    <!-- The value of this attribute matters only if the DataWriter LivelinessQosPolicy is
                    AUTOMATIC_LIVELINESS_QOS or MANUAL_BY_PARTICIPANT_LIVELINESS_QOS. In either of these cases,
                    enable_liveliness_protection specifies whether or not to use the secure builtin endpoints for
                    exchanging livelinessmessages for DataWriters of this topic. -->
                    <enable_liveliness_protection>false</enable_liveliness_protection>

                    <!-- Controls whether or not DataReader/Writer permissions are enforced for both locally created and
                    remotely discovered DataReaders/Writers. -->
                    <enable_read_access_control>false</enable_read_access_control>
                    <enable_write_access_control>false</enable_write_access_control>

                    <!-- Specifies how to protect a DataReader/Writer’s outgoing submessages. These submessages include,
                    but are not limited to, DATA, HEARTBEAT, ACKNACK, and GAP. A DATA submessage is an envelope around a
                    serialized payload, so metadata_protection_kind affects data as well as metadata. One difference
                    between metadata_protection_kind and data_protection_kind is that for metadata_protection_kind, the
                    submessage protection takes effect immediately before sending out the content, so a protected
                    submessage is re-protected when it is resent. -->
                    <metadata_protection_kind>NONE</metadata_protection_kind>

                    <!-- Specifies how to protect a DataWriter’s serialized payload. The writer history stores the
                    protected payload, so the protected payload is not re-protected when it is resent. Receiver-specific
                    GMACs are never included in this protection, so the WITH_ORIGIN_AUTHENTICATION values are not
                    allowed here. -->
                    <data_protection_kind>NONE</data_protection_kind>
                </topic_rule>
            </topic_access_rules>
        </domain_rule>
        <!-- Insecure domain for certificate management -->
        <domain_rule>
            <!-- Defines the domain ids to which the domain rule applies. -->
            <domains>
                <!-- id tags are used to specify individual domain ids to which the domain rule applies -->
                <!-- id_range tags used to specify a range of domain ids to which the domain rule applies. min and max
                tags are used to specify the range limits. The min and max tags are inclusive. If only a min tag is
                specified, all domains greater than or equal to the min id are included in the range. If only a max tag
                is specified, all the domains from 0 to max, inclusive, are included in the range. -->
                <id>27</id>
            </domains>

            <!-- Controls whether or not a remote DomainParticipant that doesn't support security or fails the
            authentication handshake is allowed to proceed in trying to communicate with a local DomainParticipant. -->
            <allow_unauthenticated_participants>true</allow_unauthenticated_participants>

            <!-- Controls whether or not remote DomainParticipant permissions are checked when a remote
            DomainParticipant is discovered. -->
            <enable_join_access_control>false</enable_join_access_control>

            <!-- Specifies the metadata_protection_kind used for the secure builtin DataWriter and DataReader entities
            used for discovery, Topic Queries, and Locator Reachability Responses. -->
            <discovery_protection_kind>NONE</discovery_protection_kind>

            <!-- Specifies the metadata_protection_kind used for the secure builtin DataWriter and DataReader entities
            used for liveliness -->
            <liveliness_protection_kind>NONE</liveliness_protection_kind>

            <!-- Specifies how to protect a DomainParticipant’s outgoing messages and what kind of protection is
            required of incoming messages. A message consists of an RTPS header and submessages, so a message is an
            envelope around submessages. If allow_unauthenticated_participants is set to TRUE, rtps_protection_kind must
            be set to NONE. Setting rtps_protection_kind to NONE will cause the DomainParticipant to accept both
            protected and unprotected incoming RTPS messages. Setting rtps_protection_kind to something other than NONE
            will cause the DomainParticipant to reject incoming RTPS messages that have a missing or incorrect GMAC or
            GCM. -->
            <rtps_protection_kind>NONE</rtps_protection_kind>

            <topic_access_rules>
                <topic_rule>
                    <!-- Topics to which the topic rule applies (* matches all topics) -->
                    <topic_expression>*</topic_expression>

                    <!-- Specifies whether to use the secure or non-secure builtin endpoints for certain outgoing
                    traffic related to this topic. Such traffic includes endpoint discovery messages and TopicQuery
                    messages. enable_discovery_protection also specifies whether or not to reject non-secure incoming
                    endpoint discovery messages related to this topic. -->
                    <enable_discovery_protection>false</enable_discovery_protection>

                    <!-- The value of this attribute matters only if the DataWriter LivelinessQosPolicy is
                    AUTOMATIC_LIVELINESS_QOS or MANUAL_BY_PARTICIPANT_LIVELINESS_QOS. In either of these cases,
                    enable_liveliness_protection specifies whether or not to use the secure builtin endpoints for
                    exchanging livelinessmessages for DataWriters of this topic. -->
                    <enable_liveliness_protection>false</enable_liveliness_protection>

                    <!-- Controls whether or not DataReader/Writer permissions are enforced for both locally created and
                    remotely discovered DataReaders/Writers. -->
                    <enable_read_access_control>false</enable_read_access_control>
                    <enable_write_access_control>false</enable_write_access_control>

                    <!-- Specifies how to protect a DataReader/Writer’s outgoing submessages. These submessages include,
                    but are not limited to, DATA, HEARTBEAT, ACKNACK, and GAP. A DATA submessage is an envelope around a
                    serialized payload, so metadata_protection_kind affects data as well as metadata. One difference
                    between metadata_protection_kind and data_protection_kind is that for metadata_protection_kind, the
                    submessage protection takes effect immediately before sending out the content, so a protected
                    submessage is re-protected when it is resent. -->
                    <metadata_protection_kind>NONE</metadata_protection_kind>

                    <!-- Specifies how to protect a DataWriter’s serialized payload. The writer history stores the
                    protected payload, so the protected payload is not re-protected when it is resent. Receiver-specific
                    GMACs are never included in this protection, so the WITH_ORIGIN_AUTHENTICATION values are not
                    allowed here. -->
                    <data_protection_kind>NONE</data_protection_kind>
                </topic_rule>
            </topic_access_rules>
        </domain_rule>
    </domain_access_rules>
</dds>